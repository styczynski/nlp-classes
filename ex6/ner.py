#
# This is version of ner_nltk Notebook that only prints the trees generated by ne_chunk
#

# Download nltk dependencies
import nltk
nltk.download('rte')
nltk.download('words')
nltk.download('maxent_ne_chunker')
nltk.download('punkt')
nltk.download('averaged_perceptron_tagger')

import nltk.corpus
import os.path
import nltk.chunk.util

# Load the corpus from data/dev.xml
corpus = nltk.corpus.rte.pairs(os.path.join(os.getcwd(), 'data/dev.xml'))

# Iterate through the corpus and print the sentences
for i, pair in enumerate(corpus):
    # Tokenization for the hypothesis from the corpus pair
    tokens_hyp = nltk.word_tokenize(pair.hyp)
    # Tagging and named entity recognition
    tags_hyp = nltk.ne_chunk(nltk.pos_tag(tokens_hyp))
    print(tags_hyp)
    
    # The same goes for the text from the pair
    tokens_text = nltk.word_tokenize(pair.text)
    tags_text = nltk.ne_chunk(nltk.pos_tag(tokens_text))
    print(tags_text)
